// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rpg
double rpg(int n, double z);
RcppExport SEXP _shinyAppFunctions_rpg(SEXP nSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< double >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(rpg(n, z));
    return rcpp_result_gen;
END_RCPP
}
// diagMatrixProd
arma::mat diagMatrixProd(arma::mat& X, arma::vec& D);
RcppExport SEXP _shinyAppFunctions_diagMatrixProd(SEXP XSEXP, SEXP DSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type D(DSEXP);
    rcpp_result_gen = Rcpp::wrap(diagMatrixProd(X, D));
    return rcpp_result_gen;
END_RCPP
}
// sample_beta_cpp
arma::vec sample_beta_cpp(arma::mat& X, arma::mat& B, arma::vec& b, arma::vec& Omega, arma::vec& k);
RcppExport SEXP _shinyAppFunctions_sample_beta_cpp(SEXP XSEXP, SEXP BSEXP, SEXP bSEXP, SEXP OmegaSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type Omega(OmegaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_beta_cpp(X, B, b, Omega, k));
    return rcpp_result_gen;
END_RCPP
}
// sample_Omega_cpp
arma::vec sample_Omega_cpp(arma::mat& X, arma::vec& beta, arma::vec& n);
RcppExport SEXP _shinyAppFunctions_sample_Omega_cpp(SEXP XSEXP, SEXP betaSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_Omega_cpp(X, beta, n));
    return rcpp_result_gen;
END_RCPP
}
// sample_beta_nocov_cpp
arma::vec sample_beta_nocov_cpp(arma::vec beta, arma::mat X, arma::vec b, arma::mat B, arma::vec n, arma::vec k);
RcppExport SEXP _shinyAppFunctions_sample_beta_nocov_cpp(SEXP betaSEXP, SEXP XSEXP, SEXP bSEXP, SEXP BSEXP, SEXP nSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_beta_nocov_cpp(beta, X, b, B, n, k));
    return rcpp_result_gen;
END_RCPP
}
// sample_gamma_beta_cpp
List sample_gamma_beta_cpp(arma::vec gamma, arma::vec beta, arma::mat X, arma::vec b, arma::mat B, int D, arma::vec n, arma::vec k, arma::vec indexes_covariates, int fixedIndexes, double d_bar);
RcppExport SEXP _shinyAppFunctions_sample_gamma_beta_cpp(SEXP gammaSEXP, SEXP betaSEXP, SEXP XSEXP, SEXP bSEXP, SEXP BSEXP, SEXP DSEXP, SEXP nSEXP, SEXP kSEXP, SEXP indexes_covariatesSEXP, SEXP fixedIndexesSEXP, SEXP d_barSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type gamma(gammaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type b(bSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< int >::type D(DSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type n(nSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type k(kSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type indexes_covariates(indexes_covariatesSEXP);
    Rcpp::traits::input_parameter< int >::type fixedIndexes(fixedIndexesSEXP);
    Rcpp::traits::input_parameter< double >::type d_bar(d_barSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_gamma_beta_cpp(gamma, beta, X, b, B, D, n, k, indexes_covariates, fixedIndexes, d_bar));
    return rcpp_result_gen;
END_RCPP
}
// sample_z_cpp
arma::vec sample_z_cpp(arma::vec psi, arma::vec p, arma::mat k_s);
RcppExport SEXP _shinyAppFunctions_sample_z_cpp(SEXP psiSEXP, SEXP pSEXP, SEXP k_sSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type psi(psiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type k_s(k_sSEXP);
    rcpp_result_gen = Rcpp::wrap(sample_z_cpp(psi, p, k_s));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP _shinyAppFunctions_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    rcpp_result_gen = Rcpp::wrap(rcpparma_hello_world());
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP _shinyAppFunctions_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_outerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP _shinyAppFunctions_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_innerproduct(x));
    return rcpp_result_gen;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP _shinyAppFunctions_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpparma_bothproducts(x));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_shinyAppFunctions_rpg", (DL_FUNC) &_shinyAppFunctions_rpg, 2},
    {"_shinyAppFunctions_diagMatrixProd", (DL_FUNC) &_shinyAppFunctions_diagMatrixProd, 2},
    {"_shinyAppFunctions_sample_beta_cpp", (DL_FUNC) &_shinyAppFunctions_sample_beta_cpp, 5},
    {"_shinyAppFunctions_sample_Omega_cpp", (DL_FUNC) &_shinyAppFunctions_sample_Omega_cpp, 3},
    {"_shinyAppFunctions_sample_beta_nocov_cpp", (DL_FUNC) &_shinyAppFunctions_sample_beta_nocov_cpp, 6},
    {"_shinyAppFunctions_sample_gamma_beta_cpp", (DL_FUNC) &_shinyAppFunctions_sample_gamma_beta_cpp, 11},
    {"_shinyAppFunctions_sample_z_cpp", (DL_FUNC) &_shinyAppFunctions_sample_z_cpp, 3},
    {"_shinyAppFunctions_rcpparma_hello_world", (DL_FUNC) &_shinyAppFunctions_rcpparma_hello_world, 0},
    {"_shinyAppFunctions_rcpparma_outerproduct", (DL_FUNC) &_shinyAppFunctions_rcpparma_outerproduct, 1},
    {"_shinyAppFunctions_rcpparma_innerproduct", (DL_FUNC) &_shinyAppFunctions_rcpparma_innerproduct, 1},
    {"_shinyAppFunctions_rcpparma_bothproducts", (DL_FUNC) &_shinyAppFunctions_rcpparma_bothproducts, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_shinyAppFunctions(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
